


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Michael Griffin and Rohan Kondetim
                       manahalli
    3 00000000         ; Date Created: 1/24/2015 
    4 00000000         ; Last Modified: 2/27/2015 
    5 00000000         ; Section 1-2pm     TA: Wooseok Lee
    6 00000000         ; Lab number: 4
    7 00000000         ; Brief description of the program
    8 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
    9 00000000         ; Hardware connections
   10 00000000         ;  PE0 is switch input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE1 is LED output (1 activates external LED on protob
                       oard) 
   12 00000000         ;Overall functionality of this system is the similar to 
                       Lab 3, with four changes:
   13 00000000         ;1-  activate the PLL to run at 80 MHz (12.5ns bus cycle
                        time) 
   14 00000000         ;2-  initialize SysTick with RELOAD 0x00FFFFFF 
   15 00000000         ;3-  add a heartbeat to PF2 that toggles every time thro
                       ugh loop 
   16 00000000         ;4-  add debugging dump of input, output, and time
   17 00000000         ; Operation
   18 00000000         ; 1) Make PE1 an output and make PE0 an input. 
   19 00000000         ; 2) The system starts with the LED on (make PE1 =1). 
   20 00000000         ;   3) Wait about 62 ms
   21 00000000         ;   4) If the switch is pressed (PE0 is 1), then toggle 
                       the LED once, else turn the LED on. 
   22 00000000         ;   5) Steps 3 and 4 are repeated over and over
   23 00000000         
   24 00000000         
   25 00000000 40024004 
                       SWITCH  EQU              0x40024004  ;PE0
   26 00000000 40024008 
                       LED     EQU              0x40024008  ;PE1
   27 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   28 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   29 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 40024510 
                       GPIO_PORTE_PUR_R
                               EQU              0x40024510
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   39 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   40 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   41 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   42 00000000                 THUMB
   43 00000000                 AREA             DATA, ALIGN=4
   44 00000000 00000032 
                       SIZE    EQU              50
   45 00000000         ;You MUST use these two buffers and two variables
   46 00000000         ;You MUST not change their names
   47 00000000         ;These names MUST be exported
   48 00000000                 EXPORT           DataBuffer
   49 00000000                 EXPORT           TimeBuffer
   50 00000000                 EXPORT           DataPt [DATA,SIZE=4]
   51 00000000                 EXPORT           TimePt [DATA,SIZE=4]
   52 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            SIZE*4
   53 000000C8 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            SIZE*4
   54 00000190 00 00 00 
              00       DataPt  SPACE            4
   55 00000194 00 00 00 
              00       TimePt  SPACE            4
   56 00000198         
   57 00000198         
   58 00000198                 ALIGN



ARM Macro Assembler    Page 5 


   59 00000198                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   60 00000000                 THUMB
   61 00000000                 EXPORT           Start
   62 00000000                 IMPORT           TExaS_Init
   63 00000000         
   64 00000000         
   65 00000000 F7FF FFFE 
                       Start   BL               TExaS_Init  ; running at 80 MHz
                                                            , scope voltmeter o
                                                            n PD3
   66 00000004 F000 F861       BL               PortE_Init  ; initialize Port E
                                                            
   67 00000008 F000 F86F       BL               PortF_Init  ; initialize Port F
                                                            
   68 0000000C F000 F81A       BL               Debug_Init  ; initialize debugg
                                                            ing dump, including
                                                             SysTick
   69 00000010 F04F 0002       MOV              R0, #0x02
   70 00000014 F000 F87E       BL               PortE_Output ;turn LED on
   71 00000018         
   72 00000018 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   73 0000001A F000 F834 
                       loop    BL               Debug_Capture ;675ns execution 
                                                            time, .062s between
                                                             calls, .0011% over
                                                            head
   74 0000001E F000 F890       BL               Heartbeat   ;toggle board led
   75 00000022 F000 F88A       BL               delay
   76 00000026 F000 F870       BL               PortE_Input
   77 0000002A 2801            CMP              R0, #0x01
   78 0000002C D004            BEQ              pressed     ;if switch pressed 
                                                            go to pressed, else
                                                             continue
   79 0000002E F04F 0002       MOV              R0, #0x02
   80 00000032 F000 F86F       BL               PortE_Output ;turn LED on
   81 00000036 E7F0            B                loop
   82 00000038         
   83 00000038         pressed
   84 00000038 4846            LDR              R0, =GPIO_PORTE_DATA_R
   85 0000003A 6801            LDR              R1, [R0]    ;R1 = GPIO_PORTE_DA
                                                            TA_R
   86 0000003C F081 0102       EOR              R1, #0x02   ;toggle PE1
   87 00000040 6001            STR              R1, [R0]
   88 00000042 E7EA            B                loop
   89 00000044         
   90 00000044         
   91 00000044         ;------------Debug_Init------------
   92 00000044         ; Initializes the debugging instrument
   93 00000044         ; Input: none
   94 00000044         ; Output: none
   95 00000044         ; Modifies: none
   96 00000044         ; Note: push/pop an even number of registers so C compil
                       er is happy
   97 00000044         Debug_Init
   98 00000044 F04F 31FF       MOV              R1, #0xFFFFFFFF ;R1 is all 1's
   99 00000048 4843            LDR              R0, =DataBuffer ;R0 points to f



ARM Macro Assembler    Page 6 


                                                            irst address of dat
                                                            abuffer
  100 0000004A F04F 0200       MOV              R2, #0      ;R2 = 0
  101 0000004E 6001    loop1   STR              R1, [R0]    ;change value of da
                                                            tabuffer at current
                                                             address to 1's
  102 00000050 F100 0004       ADD              R0, #4      ;increment temporar
                                                            y pointer
  103 00000054 F102 0201       ADD              R2, #1      ;increment counter
  104 00000058 2A32            CMP              R2, #50
  105 0000005A D1F8            BNE              loop1       ;if counter == 50, 
                                                            continue
  106 0000005C 483F            LDR              R0, =TimeBuffer ;R0 points to f
                                                            irst address of tim
                                                            ebuffer
  107 0000005E F04F 0200       MOV              R2, #0      ;R2 = 0
  108 00000062 6001    loop2   STR              R1, [R0]    ;change value of ti
                                                            mebuffer at current
                                                             address to 1's
  109 00000064 F100 0004       ADD              R0, #4      ;increment temporar
                                                            y pointer
  110 00000068 F102 0201       ADD              R2, #1      ;increment counter
  111 0000006C 2A32            CMP              R2, #50
  112 0000006E D1F8            BNE              loop2       ;if counter == 50, 
                                                            continue
  113 00000070 4939            LDR              R1, =DataBuffer ;R1 points to f
                                                            irst address of dat
                                                            abuffer
  114 00000072 483B            LDR              R0, =DataPt ;R0 points to addre
                                                            ss of datapt
  115 00000074 6001            STR              R1, [R0]    ;datapt now has add
                                                            ress of first index
                                                             in databuffer
  116 00000076 4939            LDR              R1, =TimeBuffer ;R1 points to f
                                                            irst address of tim
                                                            ebuffer
  117 00000078 483A            LDR              R0, =TimePt ;R0 points to addre
                                                            ss of timept
  118 0000007A 6001            STR              R1, [R0]    ;timept now has add
                                                            ress of first index
                                                             in timebuffer
  119 0000007C B501            PUSH             {R0, LR}    ;save LR
  120 0000007E F000 F84C       BL               SysTick_Init ;initialize timer
  121 00000082 BD01            POP              {R0, PC}    ;restore LR to PC
  122 00000084         ; init SysTick
  123 00000084         
  124 00000084 4770            BX               LR
  125 00000086         
  126 00000086         ;------------Debug_Capture------------
  127 00000086         ; Dump Port E and time into buffers
  128 00000086         ; Input: none
  129 00000086         ; Output: none
  130 00000086         ; Modifies: none
  131 00000086         ; Note: push/pop an even number of registers so C compil
                       er is happy
  132 00000086         Debug_Capture
  133 00000086 B51F            PUSH             {R0-R4, LR} ;save values
  134 00000088 4833            LDR              R0, =DataBuffer ;R0 points to f
                                                            irst address of dat



ARM Macro Assembler    Page 7 


                                                            abuffer
  135 0000008A F100 00C4       ADD              R0, #196    ;R0 points to last 
                                                            address of databuff
                                                            er
  136 0000008E 4934            LDR              R1, =DataPt
  137 00000090 680A            LDR              R2, [R1]    ;R2 has data pointe
                                                            r address
  138 00000092 4282            CMP              R2, R0
  139 00000094 D818            BHI              leave       ;if pointer address
                                                             is higher than las
                                                            t address, stop sub
                                                            routine
  140 00000096 482F            LDR              R0, =GPIO_PORTE_DATA_R
  141 00000098 6803            LDR              R3, [R0]    ;R3 = GPIO_PORTE_DA
                                                            TA_R
  142 0000009A F003 0202       AND              R2, R3, #0x02 ;isolate bit 1 an
                                                            d put in R2
  143 0000009E EA4F 0252       LSR              R2, #1      ;shift bit 1 to bit
                                                             0
  144 000000A2 F003 0301       AND              R3, #0x01   ;isolate bit 0
  145 000000A6 EA4F 1303       LSL              R3, #4      ;shift bit 0 to bit
                                                             4
  146 000000AA EA43 0302       ORR              R3, R2      ;combine two values
                                                            
  147 000000AE 6808            LDR              R0, [R1]    ;R0 = pointer addre
                                                            ss
  148 000000B0 6003            STR              R3, [R0]    ;combined values go
                                                             to pointer address
                                                            
  149 000000B2 F100 0004       ADD              R0, #4      ;increment data poi
                                                            nter
  150 000000B6 6008            STR              R0, [R1]
  151 000000B8 492A            LDR              R1, =TimePt
  152 000000BA 6808            LDR              R0, [R1]    ;R0 has time pointe
                                                            r address
  153 000000BC 4A2A            LDR              R2, =NVIC_ST_CURRENT_R
  154 000000BE 6813            LDR              R3, [R2]    ;R3 has current tim
                                                            e
  155 000000C0 6003            STR              R3, [R0]    ;time buffer gets c
                                                            urrent time at time
                                                             pointer address
  156 000000C2 F100 0004       ADD              R0, #4      ;increment time poi
                                                            nter
  157 000000C6 6008            STR              R0, [R1]
  158 000000C8 BD1F    leave   POP              {R0-R4, PC} ;restore values and
                                                             leave
  159 000000CA         
  160 000000CA         ;------------PortE_Init------------
  161 000000CA         ; Initialize GPIO Port E for positive logic switche on 
  162 000000CA         ; PE1 as the Launchpad is wired. Make the PE0 output.
  163 000000CA         ; Input: none
  164 000000CA         ; Output: none
  165 000000CA         ; Modifies: R0, R1, R2
  166 000000CA         PortE_Init
  167 000000CA 4928            LDR              R1, =SYSCTL_RCGCGPIO_R ; activa
                                                            te clock for Port E
                                                            
  168 000000CC 6808            LDR              R0, [R1]
  169 000000CE F040 0010       ORR              R0, R0, #0x10 ; set bit 5 to tu



ARM Macro Assembler    Page 8 


                                                            rn on clock
  170 000000D2 6008            STR              R0, [R1]
  171 000000D4 BF00            NOP
  172 000000D6 BF00            NOP                          ; allow time for cl
                                                            ock to finish      
                                                                               
                                                                               
                                                                       
  173 000000D8 4925            LDR              R1, =GPIO_PORTE_DIR_R ; set dir
                                                            ection register
  174 000000DA F04F 0002       MOV              R0,#0x02    ; PE0 input, PE1 ou
                                                            tput
  175 000000DE 6008            STR              R0, [R1]
  176 000000E0 4924            LDR              R1, =GPIO_PORTE_DEN_R ; enable 
                                                            Port E digital port
                                                            
  177 000000E2 F04F 0003       MOV              R0, #0x03   ; 1 means enable di
                                                            gital I/O, PE0 and 
                                                            PE1
  178 000000E6 6008            STR              R0, [R1]
  179 000000E8 4770            BX               LR
  180 000000EA         ;------------PortF_Init------------
  181 000000EA         ; Initialize GPIO Port F for heartbeat on 
  182 000000EA         ; PF2 as the Launchpad is wired. 
  183 000000EA         ; Input: none
  184 000000EA         ; Output: none
  185 000000EA         ; Modifies: R0, R1, R2
  186 000000EA         PortF_Init
  187 000000EA 4920            LDR              R1, =SYSCTL_RCGCGPIO_R ; activa
                                                            te clock for Port F
                                                            
  188 000000EC 6808            LDR              R0, [R1]
  189 000000EE F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  190 000000F2 6008            STR              R0, [R1]
  191 000000F4 BF00            NOP
  192 000000F6 BF00            NOP                          ; allow time for cl
                                                            ock to finish      
                                                                               
                                                                               
                                                                       
  193 000000F8 491F            LDR              R1, =GPIO_PORTF_DIR_R ; set dir
                                                            ection register
  194 000000FA F04F 0004       MOV              R0, #0x04   ; PF2 output
  195 000000FE 6008            STR              R0, [R1]
  196 00000100 491E            LDR              R1, =GPIO_PORTF_DEN_R ; enable 
                                                            Port F digital port
                                                            
  197 00000102 F04F 0004       MOV              R0, #0x04   ; 1 means enable di
                                                            gital I/O, PF2
  198 00000106 6008            STR              R0, [R1]
  199 00000108 4770            BX               LR
  200 0000010A         ;------------PortE_Input------------
  201 0000010A         ; Read and return the status of the switches.
  202 0000010A         ; Input: none
  203 0000010A         ; Output: R0  0x01 if Switch is pressed
  204 0000010A         ;         R0  0x00 if Switch isn't pressed
  205 0000010A         ; Modifies: R1
  206 0000010A         PortE_Input



ARM Macro Assembler    Page 9 


  207 0000010A 491D            LDR              R1, =SWITCH ; pointer to Port E
                                                             data
  208 0000010C 6808            LDR              R0, [R1]    ; read all of Port 
                                                            E
  209 0000010E F000 0001       AND              R0,R0,#0x01 ; just the input pi
                                                            n PE0
  210 00000112 4770            BX               LR          ; return R0 with in
                                                            puts
  211 00000114         
  212 00000114         ;------------PortE_Output------------
  213 00000114         ; Set the output state of PE1.
  214 00000114         ; Input: R0  new state of PE
  215 00000114         ; Output: none
  216 00000114         ; Modifies: R1
  217 00000114         PortE_Output
  218 00000114 491B            LDR              R1, =LED    ; pointer to Port E
                                                             data
  219 00000116 6008            STR              R0, [R1]    ; write to PF1
  220 00000118 4770            BX               LR
  221 0000011A         ;------------SysTick_Init------------
  222 0000011A         ; Initialize SysTick timer
  223 0000011A         ; Input: none
  224 0000011A         ; Output: none
  225 0000011A         ; Modifies: R0, R1, R2
  226 0000011A         SysTick_Init
  227 0000011A 491B            LDR              R1, =NVIC_ST_CTRL_R
  228 0000011C F04F 0000       MOV              R0, #0      ;disable SysTick du
                                                            ring setup
  229 00000120 6008            STR              R0, [R1]
  230 00000122 491A            LDR              R1, =NVIC_ST_RELOAD_R ;R1 = &NV
                                                            IC_ST_RELOAD_R
  231 00000124 481A            LDR              R0, =0x00FFFFFF 
                                                            ;max reload value
  232 00000126 6008            STR              R0, [R1]    ;[R1] = R0 = NVIC_S
                                                            T_RELOAD_M
  233 00000128 490F            LDR              R1, =NVIC_ST_CURRENT_R ;R1 = &N
                                                            VIC_ST_CURRENT_R
  234 0000012A F04F 0000       MOV              R0, #0      ;any writes to curr
                                                            ent clears it
  235 0000012E 6008            STR              R0, [R1]    ;clear counter
  236 00000130 4915            LDR              R1, =NVIC_ST_CTRL_R ;enable Sys
                                                            Tick with core cloc
                                                            k
  237 00000132 F04F 0005       MOV              R0, #0x05
  238 00000136 6008            STR              R0, [R1]    ;ENABLE and CLK_SRC
                                                             bits set
  239 00000138 4770            BX               LR
  240 0000013A         ;------------delay------------
  241 0000013A         ; Long delay function for testing, which delays about 3*
                       count cycles.
  242 0000013A         ; Input: R0  count
  243 0000013A         ; Output: none
  244 0000013A         ; Modifies: R1
  245 0000013A         delay
  246 0000013A 4816            LDR              R0, =2480000 ; approximately 62
                                                             ms delay at ~80 MH
                                                            z clock
  247 0000013C         
  248 0000013C 3801    back2   SUBS             R0, #1      ; R0 = R0 - 1 (coun



ARM Macro Assembler    Page 10 


                                                            t = count - 1)
  249 0000013E         
  250 0000013E D1FD            BNE              back2       ; if count (R0) != 
                                                            0, skip to 'delay'
  251 00000140 4770            BX               LR          ; return
  252 00000142         ;------------Heartbeat------------
  253 00000142         ; Toggles PF2 for debugging
  254 00000142         ; Input: none
  255 00000142         ; Output: none
  256 00000142         ; Modifies: none
  257 00000142         Heartbeat
  258 00000142 B403            PUSH             {R0, R1}    ;save R0 and R1
  259 00000144 4914            LDR              R1, =GPIO_PORTF_DATA_R
  260 00000146 6808            LDR              R0, [R1]    ;R0 = GPIO_PORTF_DA
                                                            TA_R
  261 00000148 F080 0004       EOR              R0, #0x04   ;not pin 2
  262 0000014C 6008            STR              R0, [R1]    ;store R0 back to G
                                                            PIO_PORTF_DATA_R
  263 0000014E BC03            POP              {R0, R1}    ;restore R0 and R1
  264 00000150 4770            BX               LR
  265 00000152 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  266 00000154                 END                          ; end of file
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              400FE608 
              40024400 
              4002451C 
              40025400 
              4002551C 
              40024004 
              40024008 
              E000E010 
              E000E014 
              00FFFFFF 
              0025D780 
              400253FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 52 in file main.s
   Uses
      At line 48 in file main.s
      At line 99 in file main.s
      At line 113 in file main.s
      At line 134 in file main.s

DataPt 00000190

Symbol: DataPt
   Definitions
      At line 54 in file main.s
   Uses
      At line 50 in file main.s
      At line 114 in file main.s
      At line 136 in file main.s

TimeBuffer 000000C8

Symbol: TimeBuffer
   Definitions
      At line 53 in file main.s
   Uses
      At line 49 in file main.s
      At line 106 in file main.s
      At line 116 in file main.s

TimePt 00000194

Symbol: TimePt
   Definitions
      At line 55 in file main.s
   Uses
      At line 51 in file main.s
      At line 117 in file main.s
      At line 151 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 00000086

Symbol: Debug_Capture
   Definitions
      At line 132 in file main.s
   Uses
      At line 73 in file main.s
Comment: Debug_Capture used once
Debug_Init 00000044

Symbol: Debug_Init
   Definitions
      At line 97 in file main.s
   Uses
      At line 68 in file main.s
Comment: Debug_Init used once
Heartbeat 00000142

Symbol: Heartbeat
   Definitions
      At line 257 in file main.s
   Uses
      At line 74 in file main.s
Comment: Heartbeat used once
PortE_Init 000000CA

Symbol: PortE_Init
   Definitions
      At line 166 in file main.s
   Uses
      At line 66 in file main.s
Comment: PortE_Init used once
PortE_Input 0000010A

Symbol: PortE_Input
   Definitions
      At line 206 in file main.s
   Uses
      At line 76 in file main.s
Comment: PortE_Input used once
PortE_Output 00000114

Symbol: PortE_Output
   Definitions
      At line 217 in file main.s
   Uses
      At line 70 in file main.s
      At line 80 in file main.s

PortF_Init 000000EA




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: PortF_Init
   Definitions
      At line 186 in file main.s
   Uses
      At line 67 in file main.s
Comment: PortF_Init used once
Start 00000000

Symbol: Start
   Definitions
      At line 65 in file main.s
   Uses
      At line 61 in file main.s
Comment: Start used once
SysTick_Init 0000011A

Symbol: SysTick_Init
   Definitions
      At line 226 in file main.s
   Uses
      At line 120 in file main.s
Comment: SysTick_Init used once
back2 0000013C

Symbol: back2
   Definitions
      At line 248 in file main.s
   Uses
      At line 250 in file main.s
Comment: back2 used once
delay 0000013A

Symbol: delay
   Definitions
      At line 245 in file main.s
   Uses
      At line 75 in file main.s
Comment: delay used once
leave 000000C8

Symbol: leave
   Definitions
      At line 158 in file main.s
   Uses
      At line 139 in file main.s
Comment: leave used once
loop 0000001A

Symbol: loop
   Definitions
      At line 73 in file main.s
   Uses
      At line 81 in file main.s
      At line 88 in file main.s

loop1 0000004E

Symbol: loop1
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 101 in file main.s
   Uses
      At line 105 in file main.s
Comment: loop1 used once
loop2 00000062

Symbol: loop2
   Definitions
      At line 108 in file main.s
   Uses
      At line 112 in file main.s
Comment: loop2 used once
pressed 00000038

Symbol: pressed
   Definitions
      At line 83 in file main.s
   Uses
      At line 78 in file main.s
Comment: pressed used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 84 in file main.s
      At line 140 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 176 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 173 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PUR_R 40024510

Symbol: GPIO_PORTE_PUR_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 259 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 196 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 193 in file main.s
Comment: GPIO_PORTF_DIR_R used once
LED 40024008

Symbol: LED
   Definitions
      At line 26 in file main.s
   Uses
      At line 218 in file main.s
Comment: LED used once
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 227 in file main.s
      At line 236 in file main.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 153 in file main.s
      At line 233 in file main.s

NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 230 in file main.s
Comment: NVIC_ST_RELOAD_R used once
SIZE 00000032

Symbol: SIZE
   Definitions
      At line 44 in file main.s
   Uses
      At line 52 in file main.s
      At line 53 in file main.s

SWITCH 40024004




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SWITCH
   Definitions
      At line 25 in file main.s
   Uses
      At line 207 in file main.s
Comment: SWITCH used once
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 167 in file main.s
      At line 187 in file main.s

18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 62 in file main.s
   Uses
      At line 65 in file main.s
Comment: TExaS_Init used once
1 symbol
374 symbols in table
